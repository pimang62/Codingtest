'''
n가지 종류의 화폐, 만드려는 금액 m이 주어진다.
사용한 화폐의 구성은 같지만 순서가 다른 것은 같은 경우로 구분한다.

가장 최소한의 화폐 개수를 만든다.
불가능할 때는 -1을 출력한다.

ex. 2원, 3원의 화폐 종류가 주어질 때 15원을 만드려면
2원 7개, 3원 1개 -> 8개 or 3원 5개 -> 5개, min인 5개를 택한다.

즉, 금액을 화폐 단위인 k로 빼서 0원이 되는 횟수를 모두 더한다.

0원은 0
1원은 10001 : 더 작은 수 업데이트 하므로 안되는 경우를 크게 설정
2원은 1  # 2 -2 + 1(횟수)
3원은 1  # 3 -3 = 1(횟수) or 3 자신 10001
4원은 2  # 4 -2 = 1 + 1 or 4 자신 10001

화폐 단위인 k에 대해 수행한 것들 중 작은 값 업데이트

a_i = min(a_i, a_(i-k) + 1)
'''

# 화폐 개수, 금액
n, m = map(int, input().split())

# 화폐 종류 리스트
k_list = []
for _ in range(n):
    k_list.append(int(input()))

# 금액에 대한 DP 테이블
d = [10001] * 10000    # 최소 화폐 단위가 금액 m보다 클 경우 에러 발생! (m+1) -> 10000

# 0은 의미 없음
d[0] = 0

# 최소 화폐 단위 업뎃 
for k in k_list :
    d[k] = 1

# 화폐 단위 k에 대하여
for k in k_list :
    # 금액에 대해 업데이트
    for i in range(2, m+1):
            d[i] = min(d[i], d[i-k] + 1)

if d[i] == 10001:
    print(-1)
else:
    print(d[m])



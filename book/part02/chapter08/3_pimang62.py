''' 
식량 창고의 개수가 n으로 주어진다.
서로 인접한 식량 창고가 공격받으면 안 된다.

1번째 창고를 털 땐 1번째 곡식량만 털어 채운다.
2번째 창고를 털 땐 1번째와 2번째 곡식량 중 큰 것을 택한다.
3번째 창고를 털 땐 1, 3번째를 합한 곡식량과 2번째 곡식량 중 큰 것을 택한다.

특정 i번째 식량 창고를 털 때 고려해야 할 것은 
1. a_i-1번째
2. a_i-2 + k_i(곡식량) 
중 max를 택하는 것이다.

a_i = max(a_i-1, a_i-2 + k_i)
'''

# 식량 창고 개수
n = int(input())

# 식량 창고 곡식량
k_list = list(map(int, input().split()))

# DP 테이블
d = [0] * n    # 0~100

# 1번 창고 털이
d[0] = k_list[0]    # 0 -> 1번 
# 2번 창고 털이
d[1] = max(k_list[0], k_list[1])
for i in range(2, n):
    d[i] = max(d[i-1], d[i-2] + k_list[i])

print(d[n-1])   # 99 -> 100번